def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.wxhg.fl_ali_realperson_example"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
        signingConfig signingConfigs.debug
    }

    signingConfigs {
        debug {
            storeFile file('E:\\projects\\brandpay_mer_app\\android\\app\\wxhg.jks')
            storePassword '123456'
            keyAlias 'wxhg'
            keyPassword '123456'
        }

        release {
            storeFile file('E:\\projects\\brandpay_mer_app\\android\\app\\wxhg.jks')
            storePassword '123456'
            keyAlias 'wxhg'
            keyPassword '123456'
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            minifyEnabled true
            shrinkResources false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}


dependencies {
//    implementation fileTree(include: ['*.aar'], dir: 'libs')
//    implementation files('libs/MiddleTierSDK-external-release-5.5.13874142.aar')
//    implementation files('libs/oss-android-sdk-2.9.2.aar')
//    implementation files('libs/rpsdk-4.10.0-open.aar')
//    implementation files('libs/SecurityBodySDK-external-release-5.5.28-preInstall.aar')
//    implementation files('libs/SecurityGuardSDK-external-release-5.5.28-preInstall.aar')
//    implementation files('libs/windvane.aar')
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okio:okio:1.16.0'
}
